@page
@model D301_WebApp.Pages.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<div>
    <h4>@Html.DisplayFor(model => model.Intake.Food.Name)</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Amount</dt>
        @if (Model.Intake.VariationName == null)
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Intake.Quantity) x @Html.DisplayFor(model => model.Intake.Amount) g
            </dd>
        }
        else
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Intake.Quantity) x @Html.DisplayFor(model => model.Intake.VariationName)
            </dd>
        }
        <dt class="col-sm-2">Energy</dt>
        <dd class="col-sm-10">
            @Model.Intake.CalculateValueToString(Model.Intake.Food.Enegry, Model.Intake.Food.Amount) @Unit.GetUnit("Enegry")
        </dd>
    </dl>
    <dl class="row">
        @foreach (var property in Model.Intake.Food.GetType().GetProperties())
        {
            @if(property.Name != "Enegry" && typeof(Nutrient).GetProperty(property.Name) != null)
            { 
                String displayValue = Model.Intake.CalculateValueToString((float)property.GetValue(Model.Intake.Food), Model.Intake.Food.Amount) + Unit.GetUnit(property.Name);
                
                <dt class="col-sm-2">@property.Name</dt>
                <dd class="col-sm-4">@displayValue</dd>
            }
        }
    </dl>
</div>
<div>
    <a asp-page="./Intake" asp-route-id="@Model.Intake.Id">Edit</a> |
    <a asp-page="./Dashboard">Back to List</a>
</div>
